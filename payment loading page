<!DOCTYPE html>
<html>
<head>
    <title>Payment Processing</title>
    <style>
        /* Style for the loading container */
        .loading-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        /* Style for the loading spinner */
        .spinner {
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 2s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <h1>Payment Processing Page</h1>
    <button id="processPaymentButton">Process Payment</button>
    
    <div class="loading-container" id="loadingContainer">
        <div class="spinner"></div>
        <p>Processing your payment...</p>
    </div>
    
    <script>
        // Get references to the button and loading container
        const processPaymentButton = document.getElementById('processPaymentButton');
        const loadingContainer = document.getElementById('loadingContainer');
        
        // Add a click event listener to the button
        processPaymentButton.addEventListener('click', function() {
            // Show the loading container
            loadingContainer.style.display = 'block';
            
            // Simulate payment processing (you can replace this with your actual payment processing logic)
            setTimeout(function() {
                // Hide the loading container when payment is processed
                loadingContainer.style.display = 'none';
                alert('Payment processed successfully!');
            }, 3000); // Simulating a 3-second payment processing delay
        });
    </script>
</body>
</html>
